=head1 NAME

Mojolicious::Plugin::ParamExpand - Use objects and data structures in your forms

=head1 SYNOPSIS

  # Mojolicious
  $self->plugin('ParamExpand', %options);
   
  # Mojolicious::Lite
  plugin 'ParamExpand', %options;

  # In your action
  sub action
  {
      my $self = shift;
      my $order = $self->param('order');
      $order->{address};
      $order->{items}->[0]->{id};
      $order->{items}->[1]->{price};
      # ...
  }

  # In your view
  %= text_field field('order.address')
  %= hidden_field field('order.items.0.id')


=head1 DESCRIPTION

L<Mojolicious::Plugin::ParamExpand> turns the request parameters into a nested data structure using L<CGI::Expand>.

=head1 OPTIONS

Options must be specified when loading the plugin.

=head2 C<separator>

  $self->plugin('ParamExpand', separator => ',')

The charactor used to separate the flattened structure. 

=head2 C<max_array>

  $self->plugin('ParamExpand', max_array => 10)

Maximum number of array elements C<CGI::Expand> will create. 

=head1 Methods

=head2 C<param>

Retrieve the nested data structure for the given parameter. 
Overrides L<Mojolicious::Controller/param>. 

For example, the following parameters 
C<users.0.name=nameA&users.1.name=nameB&id=123> will create:

  $users = $self->param('users');   
  $users->[0]->{name}    	
  $users->[1]->{name}    	

  $id = $self->param('id');

=head2 C<field>

Create form fields suitable for parameter expansion.

  <%= text_field field('users.0.name') %>
  <%= text_field field('users.1.name') %>

You can also supply the object or reference:

  <%= text_field field('book.upc', $item) %>
  
=head1 SEE ALSO

L<CGI::Expand>, L<Mojolicious::Plugin::GroupedParams>


=cut

